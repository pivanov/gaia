
#composer-container {
  position: relative;
}

/*
 * Flex layout is wrapped by 'flex-composer'. Our flex layout has
 * 2 well differentiated:
 * - 'composer-messages-container'
 * - 'messages-compose-form'
 */

.flex-composer {
  flex-direction: column;
  display: flex;
  top: 0;
  height: 100%;
  overflow: hidden;
}

.new .flex-composer {
  position: relative;
  top: 5.5rem; /* 5.5rem is the default size of the recipient panel */
               /* In Bug 1015841 this should be able to change depending on the
                * recipients panel height
                * Should the recipients panel be part of the composer ? */
  height: calc(100% - 5.5rem);
}

#composer-messages-container {
  /* We'll set flex-basis with a shrink factor of 0 to do min-height.
   * formula: flex-basis = a % + b)
   * a = (gap2 - gap1) / keyboard_height
   * b = gap2 - (gap2 - gap1) * (buri_height - header) / keyboard_height + subheader + time_header
   *
   * with :
   * gap1 = 4rem
   *   minimal visible part of a thread when the keyboard is displayed, on buri
   * gap2 = 8rem
   *   minimal visible part of a thread when the keyboard is hidden, on a buri
   * keyboard_height = 26rem
   *   measured on a buri, standard english keyboard with suggestions
   * header = 5rem
   * subheader = 2rem
   * buri_height = 48rem
   * time_header = 2rem
   *
   * See https://bugzilla.mozilla.org/show_bug.cgi?id=1015867#c12 for more
   * information
   */
  flex: 1 0 calc(15.4% + 5.38rem);
}

.new #composer-messages-container {
  flex-basis: 0;
}

#messages-compose-form {
  height: auto; /* overrides building blocks */
  min-height: 3rem;
  /*max-height: 20.4rem;*/
  background-color: #fff;
}

/* Overwrite. No more fixed height */
form[role='search'] p input,
form[role='search'] p textarea,
form[role='search'] button[type='submit'] + p > textarea {
  height: auto;
}

/* Overwrite BB because of the previous rule */
form[role='search'] button[type='submit']:after {
  content: '';
  background: none;
}

#messages-container {
  height: 100%;
  overflow: auto;
}

/* Composer */

.composer-subject-container {
  position: relative;
  padding: 0 6.5rem 0 1.5rem;
}

.composer-message-container {
  display: flex;
  position: relative;
  align-items: flex-end;
}

#messages-subject-input {
  box-sizing: border-box;
  display: none;
  position: relative;
  min-height: 2.5rem;
  max-height: 4.5rem;
  padding: .6rem 0;
  color: #0b6262;
  font-size: 1.7rem;
  line-height: 1.7rem;
  text-align: left;
  overflow: auto;
}

#messages-compose-form.subject-input-visible #messages-subject-input {
  display: block;
}

#messages-subject-input:after {
  position: absolute;
  top: .6rem;
  color: #00adad;
  font-weight: normal;
  font-style: italic;
  pointer-events: none;
}

#messages-subject-input.placeholder:after {
  content: attr(data-placeholder);
}

/*
 * Input now are contentEditable containers. We define
 * placeholder management here as well.
 */

#messages-input {
  box-sizing: border-box;
  flex: 1 1 auto;
  position: relative; /* to position its generated content */
  min-height: 3rem;
  max-height: 32.2rem;
  margin-left: 1.5rem;
  padding: .9rem .5rem .5rem 0;
  color: #474747;
  font-size: 1.7rem;
  line-height: 2.3rem;
  text-align: left;
  border-top: .1rem solid transparent;
  overflow: auto;
}

#messages-input:focus {
  max-height: 6.5rem;
}

#messages-compose-form.subject-input-visible #messages-input {
  border-color: #9ef2e7;
}

/* Border right for message input: the border needs to grow with the content,
 * that's why it's defined in the message input instead of the button. */
/* Could be revisited in bug 1013296. */
#messages-input:before {
  content: '';
  position: absolute;
  top: .7rem;
  right: 0;
  bottom: .7rem;
  width: .1rem;
  background-color: #eaeae7;
}

#messages-input.placeholder:after {
  content: attr(data-placeholder);
  position: absolute;
  top: .8rem;
  left: 0;
  color: #9b9b9b;
  font-style: italic;
  white-space: nowrap;
  pointer-events: none;
}

.col-container {
  flex-direction: column;
  display: flex;
  min-width: 6.6rem;
  max-width: 8.5rem;
  justify-content: space-between;
  align-self: stretch;
}

#messages-counter-label {
  visibility: hidden;
  position: relative;
  right: 1.5rem;
  bottom: -.1rem;
  left: 0;
  width: calc(100% - 3rem);
  height: 0;
  color: #575757;
  font-size: 0;
  text-align: left;
  align-self: flex-start;
}

#messages-counter-label.has-counter[data-message-type='sms'] {
  visibility: visible;
}

#messages-compose-form[data-message-type='mms'] #messages-counter-label {
  height: auto;
  padding: .2rem 0 .1rem 1.5rem;
  font-size: 1.4rem;
}

#messages-compose-form[data-message-type='mms'].subject-input-visible #messages-counter-label {
  margin-top: -3rem;
  padding-top: .6rem;
  border-bottom: .1rem solid #9ef2e7;
}

#messages-counter-label:after {
  content: attr(data-counter);
  position: absolute;
  top: 0;
  left: 1.5rem;
  padding-top: .2rem;
  color: #575757;
  font-size: 1.4rem;
  text-align: left;
}

#messages-compose-form[data-message-type='mms'] #messages-counter-label:after {
  top: 2rem;
}

#messages-compose-form[data-message-type='mms'].subject-input-visible #messages-counter-label:after {
  top: calc(100% + .1rem);
}

#messages-send-button {
  min-width: initial;
  margin: 0 1.5rem;
  padding: .2rem 0 0 0;
  -moz-user-select: none;
  text-align: left;
  white-space: nowrap;
  text-overflow: ellipsis;
  background: #fff;
  overflow: hidden;
}

#messages-send-button:after {
  content: attr(data-counter);
  position: absolute;
  top: 0;
  right: 0;
  width: inherit;
  padding-top: .2rem;
  color: #575757;
  font-size: 1.4rem;
  text-align: left;
}

#messages-send-button.active {
  background: #008aaa;
}

#messages-input.ignoreEvents {
  pointer-events: none;
}